# lang_pkgs.txt
# to use variables, source this file:           install dir: (S), (H), (P)
#                                               S-sys dir, H-home, P-project
#					search pkg /				install pkg /
#					list installed				update installed
#					------------------------	------------------------
# pypi.python.org:	pip search xx			 (H)pip install --user xx
#   				pip list					pip list --outdated ;
#												  pip install --upgrade xx
# (jip=jython -m pip)jip search xx			 (H)jip install --user gId:aId:ver
#					jip list					jip update xx
# ----------------------------------------------------------------------
# maven.apache.org:	???					     (H)mvn -f pom.xml depn:resolve
#   org/maven		mvn -f <path> depn:tree
# repo1.maven.:		???					     (H)ant -f <path> resolve
#   org/maven		ant -f <path> depntree
# ----------------------------------------------------------------------
# hackage. :		???					   (H,P)stack install xx
#   haskell.org		stack exec ghc-pkg --       stack update ;
#					  list		      			  stack install xx
# ----------------------------------------------------------------------
# quicklisp.org:	(ql:system-apropos "xx")?(P)(ql:quickload 'xx)
#   				(ql-dist:					(ql:update-client) ;
#					  installed-systems t)		  (ql:update-all-dists)
# ----------------------------------------------------------------------
# opam.ocaml.org:	opam search xx			 (H)opam install xx
#   				opam list					opam update; opam upgrade
# ----------------------------------------------------------------------

# godoc.org:		go get -n xx			?(P)go get xx
#					go list						go get -u
# ----------------------------------------------------------------------
# nuget.org:		nuget list xx			 (P)nuget install xx
#					???							nuget update
# ----------------------------------------------------------------------
# github.com/:		lein search "/xx$"		?(P)edit project.clj; lein deps
#   clojure			???							???
# ----------------------------------------------------------------------
# crates.io:		cargo search xx			?(H)cargo install xx
#   rust(cargo)		cargo install --list		cargo update
# ----------------------------------------------------------------------
# rubygems.org:		gem search "^xx$"		 (H)gem install --user-install xx
#					gem list					gem update
# ----------------------------------------------------------------------

# luarocks.org:		luarocks search xx		 (S)sudo luarocks install xx
#					luarocks list				???
# ----------------------------------------------------------------------
# cpan.org:			cpanm --info xx			 (S)sudo cpanm --sudo xx
#					instmodsh ; cmd? l			cpan-outdated -p | cpanm
# ----------------------------------------------------------------------
# npmjs.com:		npm search /^xx			 (P)npm install [-g] xx
#					npm list [-g]				npm update [-g]
# ----------------------------------------------------------------------
# pear.php.net:		pear search xx			 (S)sudo pear install xx
#   [pear|pecl] 	pear list					pear list-upgrades ;
#												  pear upgrade-all
# packagist.org:	composer search xx		 (S)sudo composer install xx
#   composer.phar 	composer show				composer update
# ----------------------------------------------------------------------


pip_userifc="" # "pygobject pyqt5 pyside2 tkinter wxpython"
pip_crypto="" # "gpg pygpgme m2crypto pycrypto pyopenssl python-gnutls"
pip_dbase="" # "psycopg2 mysqlclient sqlalchemy redis pymongo"
pip_network="" # "pyopenssl python-gnutls dtls pycurl"
pkgs_pip="build cffi pytest pytest-timeout hypothesis coverage configparser click pylint sphinx nose2 pyyaml toml pyxdg cookiecutter invoke pep8 pycodestyle pydocstyle ${pip_userifc} ${pip_crypto} ${pip_dbase} ${pip_network}"
# pyev pylibnet dnet pcap pyopengl
# pastescript flake8 pyev libnet dnet pcap qt5-opengl
# django flask bottle
# ----------------------------------------------------------------------

jvm_userifc="" # ""
jvm_crypto="" # "BouncyCastle"
jvm_dbase="" # "postgresql mysql-connector-java mariadb-java-client Hibernate jedis redisson mongo-java-driver"
jvm_network="" # "javax.mail jakarta.mail"
pkgs_jvm="jna junit testng log4j-over-slf4j logback-classic ini4j scala scalatest ${jvm_userifc} ${jvm_crypto} ${jvm_dbase} ${jvm_network}"
# download jars: cobertura scalastyle
# ----------------------------------------------------------------------

stack_userifc="" # "gi-gtk gtk3"
stack_crypto="" # "hsopenssl tls"
stack_dbase="" # "hdbi-sqlite postgresql mysql redis mongoDB"
stack_network="" # "curlhs ftp-client http-client HaskellNet"
pkgs_stack="hslogger HUnit QuickCheck test-framework-hunit test-framework-quickcheck2 hspec tasty-hunit tasty-quickcheck hlint ConfigFile ${stack_userifc} ${stack_crypto} ${stack_dbase} ${stack_network}"
# hlibev pcap OpenGL
# happstack yesod bird scotty
# stack.yaml extra-deps: clock-*, unbounded-delays-*, tasty-*, tasty-hunit-*, tasty-quickcheck-*
# ----------------------------------------------------------------------

#quicklisp_userifc="" # "cl-cffi-gtk commonqt qtools"
#quicklisp_crypto="" # ""
#quicklisp_dbase="" #
#quicklisp_network="" # ""
#pkgs_quicklisp="fiveam lisp-unit2 clunit cl-quickcheck cl-project documentation-template codex cl-ppcre py-configparser cl-json cl-yaml log4cl unix-options getopt cli-parser cffi buildapp ${quicklisp_userifc} ${quicklisp_crypto} ${quicklisp_dbase} ${quicklisp_network}"
# queues.simple-queue queues.priority-queue clazy caveman ningle
# ----------------------------------------------------------------------

opam_userifc="" # "lablgtk"
opam_crypto="" # "ssl"
opam_dbase="" # "sqlite3 postgresql mysql"
opam_network="" # ""
pkgs_opam="dune oasis ocamlbuild odoc volt pcre ocaml-inifiles yojson ezjsonm batteries ounit2 qcheck bisect ctypes ctypes-foreign utop core ${opam_userifc} ${opam_crypto} ${opam_dbase} ${opam_network}"
# ocamldebug ocamllint lablgl
# eliom ocsigenserver
# ----------------------------------------------------------------------


goget_userifc="" # "github.com/conformal/gotk3/gtk"
goget_crypto="" # ""
goget_dbase="" # "github.com/mattn/go-sqlite3 github.com/go-sql-driver/mysql"
goget_network="" # ""
pkgs_goget="golang.org/x/tools/godoc golang.org/x/tools/cover github.com/alecthomas/log4go github.com/unknwon/goconfig github.com/leanovate/gopter ${goget_userifc} ${goget_crypto} ${goget_dbase} ${goget_network}"
# ----------------------------------------------------------------------

nuget_userifc="" # "GtkSharp"
nuget_crypto="" # "System.Security.Cryptography.OpenSsl BouncyCastle"
nuget_dbase="" # "sqlite-net Npgsql NHibernate StackExchange.Redis MongoDB.Driver"
nuget_network="" # "MailKit MimeKit"
pkgs_nuget="netstandard.library fsharp.core fscheck.nunit fsunit nunit nunit.consolerunner fscheck.xunit fsunit.xunit xunit.core xunit.runner.console microsoft.net.test.sdk log4net ini-parser-netstandard system.diagnostics.textwritertracelistener mono.options newtonsoft.json yamldotnet ${nuget_userifc} ${nuget_crypto} ${nuget_dbase} ${nuget_network}"
# mono.gendarme ilrepack brutal.dev.strongnamesigner FSharpLint SharpPcap nupengl.core glm
# ----------------------------------------------------------------------

lein_userifc="" # ""
lein_crypto="" # ""
lein_dbase="" # "'seancorfield/next.jdbc "1.2.659"'"
lein_network="" # ""
pkgs_lein="'org.clojure/clojure "1.10.3"' 'clojure.test' 'jonase/eastwood "1.3.0"' 'org.clojure/test.check "1.1.1"' 'org.clojure/tools.reader "1.3.6"' 'org.clojure/tools.logging "1.2.4"' 'org.clojure/tools.cli "1.0.206"' 'org.clojure/data.json "2.4.0"' 'org.slf4j/slf4j-api "1.7.33"' 'org.slf4j/log4j-over-slf4j "1.7.33"' 'org.ini4j/ini4j "0.5.4"' 'ch.qos.logback/logback-classic "1.2.10"' 'javax.json/javax.json-api "1.1.4"' 'org.glassfish/javax.json "1.1.4"' 'org.yaml/snakeyaml "1.30"' 'com.moandjiezana.toml/toml4j "0.7.2"' 'net.java.dev.jna/jna "5.10.0"' ${lein_userifc} ${lein_crypto} ${lein_dbase} ${lein_network}"
# 'compojure "1.3.2"'
# ----------------------------------------------------------------------

cargo_userifc="" # "gtk"
cargo_crypto="" # ""
cargo_dbase="" # ""
cargo_network="" # "curl-sys ftp imap pop3 lettre"
pkgs_cargo="num itertools rust-ini quickcheck log log4rs argparse getopts regex chrono rand serde_json toml yaml-rust libc pkg-config ${cargo_userifc} ${cargo_crypto} ${cargo_dbase} ${cargo_network}"
# ----------------------------------------------------------------------

gem_userifc="" # "curses tk gir_ffi-gtk"
gem_crypto="" # ""
gem_dbase="" # "rdbi-driver-sqlite3" #rdbi-driver-postgresql rdbi-driver-mysql redis mongo
gem_network="" # ""
pkgs_gem="bundler rake rdoc yard rspec minitest simplecov rubocop rake-compiler logging log4r inifile parseconfig toml thor ffi ${gem_userifc} ${gem_crypto} ${gem_dbase} ${gem_network}"
# jeweler hoe rcov rlint eventmachine pcaprub opengl jruby-lint jruby-rcov jruby-openssl rails sinatra padrino
# ----------------------------------------------------------------------


#luarocks_userifc="" # "lgi lqt"
#luarocks_crypto="" # "luacrypto luaossl luasec"
#luarocks_dbase="" # "luasql-sqlite3 luadbi-sqlite3 luasql-postgres luadbi-postgresql redis-lua"
#luarocks_network="" # ""
#pkgs_luarocks="luacheck luadoc lunit luaunit lualogging argparse luacov ${luarocks_userifc} ${luarocks_crypto} ${luarocks_dbase} ${luarocks_network}"
# luasocket lua-ev lluv luagl orbit mercury
# ----------------------------------------------------------------------

#cpanm_userifc="" # "Curses Tk Gtk3 Qt"
#cpanm_crypto="" # "Crypt::GCrypt Crypt::OpenSSL::RSA Crypt::OpenSSL::X509 IO::Socket::SSL"
#cpanm_dbase="" # "DBD::SQLite DBD::Pg DBD::mysql Redis MongoDB"
#cpanm_network="" # ""
#pkgs_cpanm="Module::Starter Perl::Critic Perl::Tidy Test::Class Devel::Cover Log::Log4perl Config::IniFiles ${cpanm_userifc} ${cpanm_crypto} ${cpanm_dbase} ${cpanm_network}"
# EV POE Net::Libdnet Net::Pcap OpenGL OpenGL::GLM
# Catalyst::Runtime Dancer
# ----------------------------------------------------------------------

#npm_userifc="" # "node-gtk"
#npm_crypto="" # ""
#npm_dbase="" # ""
#npm_network="" # ""
#pkgs_npm="jslint jsdoc nodeunit jscoverage log4js cli argparse node-ini ${npm_userifc} ${npm_crypto} ${npm_dbase} ${npm_network}"
# express tower
# ----------------------------------------------------------------------

#pear_userifc="" # ""
#pear_crypto="" # ""
#pear_dbase="" # ""
#pear_network="" # ""
#pkgs_pear="phpDocumentor XML_Serializer PEAR_PackageFileManager2 PHPUnit Log parse_ini_file ${pear_userifc} ${pear_crypto} ${pear_dbase}"
#pecl_userifc="" # ""
#pecl_crypto="" # "crypto OpenSSL"
#pecl_dbase="" # "PDO_SQLITE" # PDO_MYSQL PDO_PGSQL redis mongo
#pecl_network="" # ""
#pkgs_pecl="xdebug ${pecl_userifc} ${pecl_crypto} ${pecl_dbase}"
# ZendFramework cakephp Slim

#composer_userifc="" # "toknot/gtk"
#composer_crypto="" # ""
#composer_dbase="" # ""
#composer_network="" # ""
#pkgs_composer="apache/log4php ${composer_userifc} ${composer_crypto} ${composer_dbase} ${composer_network}"
# ----------------------------------------------------------------------
