# opensuse/distro_pkgs.txt
# to use variables, source this file:
# source distro_pkgs.txt ; $pkgmgr_install $pkgs_cmdln_tools 2> /tmp/pkgsInstall_stderr.txt | tee /tmp/pkgsInstall_stdout.txt

pkgmgr_install='zypper --non-interactive --no-recommends install'
pkgmgr_search='zypper search'
pkgmgr_update='zypper --non-interactive refresh'

pkg_repos_sources() {
	sep='#--------------------#'
	argX='zypper --no-refresh repos'
	
	#printf "${sep}\n$argX\n" | cat - $argX
	printf "${sep}\n$argX\n" ; $argX
}

pkgs_installed() {
	METHOD=${1:-explicit}
	
	echo 'zypper --no-refresh search --installed-only --type pattern'
	zypper --non-interactive refresh
	echo '----------' ; zypper --no-refresh search -i -t pattern ; echo ''
	
	if [ "leaf" = "$METHOD" ] ; then
		pkg_nms=$(zypper --no-refresh search --installed-only | grep ^i | cut -d'|' -f2) ;
		(for pkg_nm in $pkg_nms ; do
			no_rdepns=$(rpm -q --whatrequires $pkg_nm | grep -e 'no package requires') ;
			if [ ! -z "$no_rdepns" ] ; then continue ; fi ;
			
			pkg_repo=$(zypper --no-refresh info $pkg_nm | grep -e Repository | cut -d: -f2 | tr -d ' ') ;
			
			echo "($pkg_repo)" $(rpm -q --queryformat '%{group}/%{name} \n' $pkg_nm) ;
		done) | sort | column ;
	else
		pkg_nms=$(sudo awk -F\| '$6 && $2 == "install" {print $3}' /var/log/zypp/history | sort | uniq) ;
		(for pkg_nm in $pkg_nms ; do
			pkg_grp=$(rpm -qi $pkg_nm | grep -e Group | cut -d: -f2 | tr -d ' ') ;
			pkg_repo=$(zypper --no-refresh info $pkg_nm | grep -e Repository | cut -d: -f2 | tr -d ' ') ;
			echo "($pkg_repo) $pkg_grp/$pkg_nm" ;
		done) | sort | column ;
	fi
}

pkgs_cmdln_extras="calcurse taskwarrior msmtp isync mutt abook transmission rtorrent irssi finch moc"
# cmus rclone

pkgs_filesys_utils="cryptsetup dosfstools gptfdisk parted fsarchiver fuse-exfat exfat-utils"

pkgs_cmdln_tools="+pattern:enhanced_base man-pages sudo ntp python bash nfs-utils mc rlwrap nano firewalld clamav telnet curl wget aria2 gnu-netcat rsync bzip2 zip unzip p7zip-full gpg2 openssh password-store keychain openssl gnutls mozilla-nss-devel mozilla-nss-tools w3m cups-pdf qpdf nss-mdns avahi-utils sqlite3 git mercurial tcpdump nmap dialog screen tmux"
# clamav-database


pkgs_displaysvr_xorg="+pattern:x11 xf86-video-vesa xf86-video-intel xf86-input-libinput xf86-input-evdev xdg-utils xdg-user-dirs xscreensaver"

pkgs_extras_qtapp="" # filled-in by for loop with field 1 apps
pkgs_extras_gtkapp="" # filled-in by for loop with field 2 apps
for qtapp_gtkapp in partitionmanager:gparted cmst:wicd bluez-qt:blueman \
	:geany libreoffice gnucash clamtk transmission-qt:transmission-gtk \
	luckybackup:grsync keepassxc:keepass2 qtpass: kwalletmanager:seahorse \
	falkon:firefox-esr thunderbird skanlite:simple-scan sqlitebrowser \
	pidgin quassel:hexchat qgit:gitg tortoisehg: nmapsi4:zenmap \
	clementine:gmusicbrowser smplayer:totem pavucontrol-qt:pavucontrol \
	k3b:brasero calibre kamoso:guvcview okular:fbreader ; do
  pkgs_extras_gtkapp="$pkgs_extras_gtkapp $(echo $qtapp_gtkapp | cut -d: -f2)" ;
  pkgs_extras_qtapp="$pkgs_extras_qtapp $(echo $qtapp_gtkapp | cut -d: -f1)" ;
done

pkgs_deskenv_lxde="$pkgs_displaysvr_xorg gpicview parcellite xarchiver epdfview obconf +pattern:lxde conky leafpad orage"
#+pattern:fonts


# addons browser: User Agent Switcher, AdBlock, Firebug, Https Everywhere,
#  uBlock, NoScript

# addons thunderbird: EnigMail, gContactSync, Lightning, Provider f/Ggl Cal,
#  TorBirdy


pkgs_lang_py2=""

pkgs_lang_py3=""

pkgs_lang_py="${pkgs_lang_py2} ${pkgs_lang_py3}"

pkgs_lang_c=""
# ddd

pkgs_lang_java=""
default_java_home="/usr/lib/jvm/default"
default_java_version="1.7"
