#!/usr/bin/env python
import os, glob

def matches_filepatterns(filepats, paths):
    import fnmatch
    matches_pats = [os.path.join(root, file1) for path in paths
        for root, dirs, files in os.walk(path) for filepat in filepats
        for file1 in fnmatch.filter(dirs + files, filepat)]
    return matches_pats
    
def remove_pathlist(pathlist):
    import shutil
    for path in pathlist:
        if os.path.exists(path) and os.path.isdir(path):
            shutil.rmtree(path)
        elif os.path.exists(path):
            os.remove(path)
    
def copy_pathlist(pathlist, dst):
    import shutil
    for path in pathlist:
        if os.path.exists(path) and os.path.isdir(path):
            shutil.copytree(path, os.path.join(dst, os.path.basename(path)))
        elif os.path.exists(path) and not os.path.isdir(path):
            shutil.copy(path, dst)


if '__main__' == __name__:
    copy_pathlist(['choices'], 'build')
    remove_pathlist(['choices'])

    if '{{ cookiecutter.license }}' in ['Apache-2.0', 'MIT', 'BSD-3-Clause', 
            'GPL-3.0+', 'ISC', 'Unlicense']:
        copy_pathlist(glob.glob('build/choices/license/LICENSE_{0}'.format(
            '{{ cookiecutter.license }}')), 'LICENSE')
    
    if os.path.exists('_templates') and os.path.isdir('_templates') and 
			os.path.exists('{{ cookiecutter._template }}'):
        remove_pathlist([os.path.join('_templates/cookiecutter/',
            os.path.basename('{{ cookiecutter._template }}'))])
        copy_pathlist(['{{ cookiecutter._template }}'], 
            '_templates/cookiecutter/')
