# freebsd/distro_pkgs.txt
# to use variables, source this file:
# source distro_pkgs.txt ; $pkgmgr_install $pkgs_cmdln_tools 2> /tmp/pkgsInstall_stderr.txt | tee /tmp/pkgsInstall_stdout.txt

pkgmgr_fetch='pkg fetch -dy'
pkgmgr_install='pkg install -y'
pkgmgr_search='pkg search --regex'
pkgmgr_update='pkg update'

pkg_repos_sources() {
	sep='#--------------------#'
	argX='pkg -vv | grep -A99 -e Repositories:'
	
	#printf "${sep}\n$argX\n" | cat - $argX
	printf "${sep}\n$argX\n" ; $argX
}

pkgs_installed() {
	METHOD=${1:-explicit}
	
	#echo '### for pkg-message: pkg query "%o\n%M" $pkg_nm ###'
	pkg update
	if [ "leaf" = "$METHOD" ] ; then
		# '%#r = 0' for no reverse depns; '%#r > 0' for reverse depns
		pkg query -e '%#r=0' %o ;
	else
		# '%a = 0' for explicitly installed; '%a = 1' for dependencies
		pkg query -e '%a=0' %o ;
	fi
}

pkgs_cmdln_extras="calcurse taskwarrior msmtp isync mutt abook transmission-cli rtorrent irssi finch rclone cmus"

pkgs_filesys_utils="fusefs-exfat exfat-utils"

pkgs_cmdln_tools="sudo ntp python en-freebsd-doc mc-light rlwrap nano clamav aria2 netcat rsync bzip2 zip unzip p7zip gnupg password-store keychain base64 openssl gnutls ca_root_nss w3m cups-pdf qpdf nss_mdns sqlite3 git mercurial tcpdump nmap pinentry-curses cdialog screen tmux"


pkgs_displaysvr_xorg="xorg-minimal xf86-video-vesa xf86-video-intel xf86-input-libinput xf86-input-evdev xterm xdg-utils xdg-user-dirs py27-xdg xscreensaver"

pkgs_deskenv_lxde="$pkgs_displaysvr_xorg lightdm-gtk-greeter obconf menumaker gvfs lxde-meta conky"

pkgs_deskenv_lxqt="$pkgs_displaysvr_xorg breeze-icons sddm obconf-qt menumaker gvfs lxqt conky"


# possibly extra Qt:Gtk deskenv apps
# ----------------------------------------
# (disk utils) partitionmanager:gparted
# (ifc connect) cmst:wicd bluez-qt:blueman
# (editors, office apps) :geany libreoffice :gnucash
# (file share) transmission-qt:transmission-gtk luckybackup:grsync
# (archivers) ark:xarchiver
# (clipboard tool) qlipper:parcellite
# (crypt utils) keepassxc:keepass2 qtpass: kwalletmanager:seahorse
# (browser) :chromium falkon:firefox-esr
# (email) :thunderbird
# (print utils) skanlite:simple-scan qpdfview:epdfview
# (db utils) sqlitebrowser:
# (IM-IRC) quassel:hexchat :pidgin
# (vcs gui) qgit:gitg tortoisehg:
# (traffic util) nmapsi4:zenmap wireshark
# (media plyr) clementine:gmusicbrowser smplayer:totem
# (audio tool) pavucontrol-qt:pavucontrol k3b:brasero
# (image tool) lximage-qt:gpicview :gimp
# (webcam tool) kamoso:guvcview
# (PIM tools) :gsimplecal :orage
# (ebook utils) calibre: okular:fbreader


# addons browser: User Agent Switcher, AdBlock, Firebug, Https Everywhere,
#  uBlock, NoScript

# addons thunderbird: EnigMail, gContactSync, Lightning, Provider f/Ggl Cal,
#  TorBirdy


pkgs_lang_py2="py27-pip pychecker jython"

pkgs_lang_py3="py36-pip jython"

pkgs_lang_py="${pkgs_lang_py2} ${pkgs_lang_py3}"

lang_c_gui="" # "gtk3 gtk2 qt5-gui qt4-gui"
lang_c_crypto="" # "libgcrypt gpgme openssl gnutls mbedtls"
lang_c_db="" # "sqlite3 libdbi sqlitejdbc"
pkgs_lang_c="cmake autotools gmake rubygem-rake scons premake4 ninja gdb pkgconf splint cppcheck check cunit log4c pcre json-glib lcov swig30 ${lang_c_gui} ${lang_c_crypto} ${lang_c_db}"
# ddd valgrind doxygen

pkgs_lang_java="openjdk openjdk8 apache-ant maven3 gradle sbt java-checkstyle groovy"
default_java_home="/usr/local/openjdk8"


pkgs_lang_scm="gauche slib sagittarius-scheme"

pkgs_lang_hs="ghc stack hs-stack"

pkgs_lang_scala="openjdk openjdk8 scala apache-ant maven3 gradle sbt"

pkgs_lang_ml="ocaml ocaml-opam"

pkgs_lang_lisp="sbcl ccl"


pkgs_lang_go="go gpm"

pkgs_lang_cs="mono linux-dotnet-sdk"

pkgs_lang_clj="clojure leiningen"

pkgs_lang_fs="fsharp"

pkgs_lang_rs="rust"

pkgs_lang_rb="ruby jruby"
