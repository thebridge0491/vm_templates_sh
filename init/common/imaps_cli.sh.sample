#!/bin/sh

# (smime dec) cat smime.p7m | openssl cms -decrypt -recip recip.pem \
#   > tmp/data.mime
# (mime extract) (cd tmp ; [munpack -t data.mime | ripmime -i data.mime])
# (gpg dec) cat data.txt.gpg | gpg --decrypt > data.txt.gpg

# NOTE: possible errors/failures for ipv6 --- to disable
# (FreeBSD) [sudo] sysctl net.inet6.ip6.v6only=0
# (Linux)   [sudo] sysctl net.ipv6.conf.*.disable_ipv6=1

# usage:
#   [host=imap.gmail.com] [port=993] \
#     sh imaps_cli.sh [-u=im.computer@gmail.com] \
#     [-m=INBOX] [-s=UNSEEN] [-n=0] [-b=0]

SCRIPTPARENT=${SCRIPTPARENT:-$(dirname ${0})}
USE_CURL=${USE_CURL:-0} ; OPEN_AUTH=${OPEN_AUTH:-0}
HDR_ITEMS=${HDR_ITEMS:-From To Subject Date}
# [gmail.com | mail.yahoo.com | comcast.net]
host=${host:-imap.gmail.com} ; port=${port:-993}
#read -p "Input password entry: " entry

user=im.computer@gmail.com
mailbox=INBOX
criterion=UNSEEN
idx_spec=0
brief=0
#infile=/dev/stdin
#outfile=/dev/stdout

for opt in "${@}" ; do
  case ${opt} in
  -u=*) user=`echo ${opt} | sed 's|-u=||'` ;;
  -m=*) mailbox=`echo ${opt} | sed 's|-m=||'` ;;
  -s=*) criterion=`echo ${opt} | sed 's|-s=||'` ;;
  -n=*) idx_spec=`echo ${opt} | sed 's|-n=||'` ;;
  -b=*) brief=`echo ${opt} | sed 's|-b=||'` ;;
  #-i=*) infile=`echo ${opt} | sed 's|-i=||'` ;;
  #-o=*) outfile=`echo ${opt} | sed 's|-o=||'` ;;
  esac
done

if [ ! "0" = "${OPEN_AUTH:-0}" ] ; then
  entry=${entry:-tokenmail}
  token=$(sh ${SCRIPTPARENT}/get_secret.sh gettoken_entry ${entry} | tr '\n' '\0')

  # #Note: disable line-wrapping: use openssl base64 -A OR base64 -w 0
  auth_method=oauthbearer
  sasl_str=$(printf "n,a=${user},\1auth=Bearer ${token}\1\1" | openssl base64 -A)
  if [ ! "0" = "${USE_XOAUTH2:-0}" ] ; then
    auth_method=xoauth2
    sasl_str=$(printf "user=${user}\1auth=Bearer ${token}\1\1" | openssl base64 -A)
  fi ;
else
  ##stty -echo ; read -p "Password for user(${user}): " passw ; stty echo
  entry=${entry:-appmail}
  passw=$(sh ${SCRIPTPARENT}/get_secret.sh getpass_entry ${entry} | tr '\n' '\0')

  auth_method=plain
  sasl_str=$(printf "\0${user}\0${passw}" | openssl base64)
fi

if [ "0" = "${USE_CURL:-0}" ] ; then
  {
    echo "l1 authenticate ${auth_method} ${sasl_str}" ; sleep 2 ;
    echo "g1 examine ${mailbox}" ; sleep 2 ;
    if [ ! "0" = "${idx_spec}" ] ; then
      if [ ! "0" = "${brief}" ] ; then
        echo "f1 fetch ${idx_spec} (BODY.PEEK[HEADER.FIELDS (${HDR_ITEMS})])" ;
        sleep 2 ;
      else
        #echo "f3 fetch ${idx_spec} (RFC822)" ; sleep 2 ;
        ##echo "m1 store ${idx_spec} -FLAGS (\Seen)" ; sleep 2 ;
        echo "f2 fetch ${idx_spec} (BODY.PEEK[])" ; sleep 2 ;
      fi ;
    else
      echo "a1 list / *" ; sleep 2 ;
      echo "i1 status ${mailbox} (MESSAGES RECENT UIDNEXT UIDVALIDITY UNSEEN)" ; sleep 2 ;
      echo "s1 search ${criterion}" ; sleep 2 ;
    fi ;
    echo "z1 logout" ; sleep 2 ;
  } | openssl s_client -quiet -verify_quiet -crlf -connect ${host}":"${port} -4
  #} | gnutls-cli --crlf --insecure --no-ca-verification --port ${port} ${host}

  # (openssl s_client) ??? Linux: -CApath ...      ; macOS: -CAfile ...
  # (gnutls-cli)       ??? Linux: --x509cafile ... ; macOS: --x509cafile ...
else
  mail_rcpts=""
  for recip in ${recips} ; do
    mail_rcpts="${mail_rcpts}--mail-rcpt ${recip} " ;
  done ;

  if [ "0" = "${OPEN_AUTH:-0}" ] ; then
    cred_opts="--user ${user}":"${passw}" ;
  else
    cred_opts="--user ${user} --oauth2-bearer ${token}" ;
  fi ;

  curl --insecure --crlf --ssl-reqd ${cred_opts} \
    --url imaps://${host}":"${port} -4 --request "examine ${mailbox}" ;
  if [ ! "0" = "${idx_spec}" ] ; then
    if [ ! "0" = "${brief}" ] ; then
      curl --insecure --crlf --ssl-reqd ${cred_opts} \
        --url imaps://${host}":"${port}"/${mailbox}" -4 --verbose \
        --request "fetch ${idx_spec} (BODY.PEEK[HEADER.FIELDS (${HDR_ITEMS})])" ;
    else
      #curl --insecure --crlf --ssl-reqd ${cred_opts} \
      #  --url imaps://${host}":"${port}"/${mailbox}" -4 --verbose \
      #  --request "fetch ${idx_spec} (BODY.PEEK[])" ;
      curl --insecure --crlf --ssl-reqd ${cred_opts} \
        --url imaps://${host}":"${port}"/${mailbox};MAILINDEX=${idx_spec}" -4 ;
      curl --insecure --crlf --ssl-reqd ${cred_opts} \
        --url imaps://${host}":"${port}"/${mailbox}" -4 \
        --request "store ${idx_spec} -FLAGS (\Seen)" ;
    fi ;
  else
    curl --insecure --crlf --ssl-reqd ${cred_opts} \
      --url imaps://${host}":"${port} -4 ;
    curl --insecure --crlf --ssl-reqd ${cred_opts} \
      --url imaps://${host}":"${port} -4 \
      --request "status ${mailbox} (MESSAGES RECENT UIDNEXT UIDVALIDITY UNSEEN)" ;
    curl --insecure --crlf --ssl-reqd ${cred_opts} \
      --url imaps://${host}":"${port}"/${mailbox}" -4 \
      --request "search ${criterion}" ;
  fi ;
fi
