# debian/{distro_pkgs.ini,distro_pkgmgr_funcs.sh}
# to use variables|functions, source these file(s):
# source distro_pkgs.ini ; source distro_pkgmgr_funcs.sh
# $pkgmgr_install $pkgs_cmdln_tools 2> /tmp/pkgsInstall_stderr.txt | tee /tmp/pkgsInstall_stdout.txt

pkgs_cmdln_extras="todotxt-cli ledger msmtp-mta isync mutt s-nail transmission-cli rtorrent irssi finch rclone cmus"
# fdm
## pip install --user xx: khal khard vdirsyncer offlineimap topydo beancount getmail6

pkgs_emulation_utils="ovmf dnsmasq qemu bridge-utils qemu-efi-aarch64"
# dnld: https://linuxcontainers.org/downloads/lxd/lxd-[5.0.1].tar.gz

pkgs_filesys_utils="cryptsetup dosfstools gdisk parted fsarchiver exfat-fuse exfat-utils"

pkgs_cmdln_tools="sudo ntp python3 bash bsdmainutils file nfs-common mc rlwrap nano nftables clamav curl wget aria2 netcat-traditional rsync bzip2 zip unzip p7zip-full gpg ssh pass keychain openssl gnutls-bin libnss3-dev libnss3-tools w3m printer-driver-cups-pdf qpdf avahi-daemon avahi-utils sqlite3 git mercurial tcpdump nmap dialog screen tmux"


pkgs_displaysvr_xorg="xorg xserver-xorg-video-vesa xserver-xorg-video-intel xserver-xorg-input-libinput xserver-xorg-input-evdev xdg-utils xdg-user-dirs xscreensaver"

pkgs_deskenv_xfce="lightdm menu xfce4 conky"

pkgs_deskenv_lxqt="sddm obconf-qt obsession menu lxqt conky"
# obmenu openbox-menu


# possibly extra Qt:Gtk deskenv apps
# ----------------------------------------
# (disk utils) partitionmanager:gparted
# (ifc connect) cmst:wicd bluez-qt:blueman
# (editors, office apps) :geany libreoffice :gnucash
# (file share) transmission-qt:transmission-gtk luckybackup:grsync
# (archivers) ark:xarchiver
# (clipboard tool) qlipper:parcellite
# (crypt utils) keepassxc:keepass2 qtpass: kwalletmanager:seahorse
# (browser) :chromium falkon:firefox-esr
# (email) :thunderbird
# (print utils) skanlite:simple-scan qpdfview:epdfview
# (db utils) sqlitebrowser:
# (IM-IRC) quassel:hexchat :pidgin
# (vcs gui) qgit:gitg tortoisehg:
# (traffic util) nmapsi4:zenmap wireshark
# (media plyr) clementine:gmusicbrowser smplayer:totem
# (audio tool) pavucontrol-qt:pavucontrol k3b:brasero
# (image tool) lximage-qt:gpicview :gimp
# (webcam tool) kamoso:guvcview
# (PIM tools) :gsimplecal :orage
# (ebook utils) calibre: okular:fbreader


# addons browser: AdBlock Plus, HTTPS Everywhere, uBlock Origin, NoScript,
#   User-Agent Switcher

# addons thunderbird 78+: Manually sort folders, Remove Duplicate Messages,
#   Provider f/CalDAV & CardDAV, TbSync, ? ImportExportTools NG, ? TorBirdy


pkgs_lang_py="python3-pip"
# python3-coverage python3-invoke python3-sphinx python3-pytest python3-pep8 pylint cookiecutter python3-gi python3-tk pyqt5-dev python3-pyside2.qtgui python3-wxgtk4.0

lang_c_userifc="libncurses-dev tcl8.6-dev tk8.6-dev libgtk-3-dev"
# ""
lang_c_crypto="libgcrypt20-dev libgpgme-dev libssl-dev libgnutls28-dev libmbedtls-dev"
# ""
lang_c_dbase="libdbi-dev libsqlite3-dev libdbd-sqlite3 postgresql mariadb-server redis-server libmongoc-dev"
# ""
lang_c_network="libcurl4-openssl-dev"
# ""
pkgs_lang_c="cmake automake libtool gdb pkgconf splint llvm clang check libcunit1-dev liblog4c-dev libpcre3-dev libglib2.0-dev lldb gfortran lcov swig libjson-glib-dev libyajl-dev"
# ddd valgrind doxygen make rake premake4 cppcheck
## pip install --user xx: meson ninja scons

pkgs_lang_java="default-jdk ant"
# maven gradle checkstyle cobertura libjava-gnome-java groovy
default_java_home="/usr/lib/jvm/default-java"
default_java_version="1.11"
default_javafx_home="/usr/share/openjfx"
# dnld: https://download2.gluonhq.com/openjfx/[11]/openjfx-[11]_[linux]-[x64]_bin-[sdk|jmods].zip


lang_scm_gui=""
# "gauche-gtk"
pkgs_lang_scm="gauche gauche-dev guile-2.2-dev"

pkgs_lang_hs="ghc alex happy ghc-haddock haskell-stack hlint libghc-hunit-dev libghc-hslogger-dev"

pkgs_lang_scala="${pkgs_lang_java}"
# scala
pkgs_lang_ml="ocaml opam dune libounit-ocaml-dev libctypes-ocaml-dev ocaml-core"
# oasis

pkgs_lang_lisp="sbcl clisp"


pkgs_lang_go="golang"

pkgs_lang_cs="mono-complete mono-xbuild"
## NOTE: missing *.dll(s) errors - edit [/usr/local]/etc/mono/config
##  example: libgobject-2.0 -> libgobject-2.0-0.dll
# dnld: https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh
# gtk-sharp3

pkgs_lang_clj=""
# clojure leiningen
pkgs_lang_fs="${pkgs_lang_cs}"

pkgs_lang_rs="cargo rust-lldb"

pkgs_lang_rb="ruby"

pkgs_lang_swift="libbsd-dev libedit-dev libicu-dev libncurses-dev"
# dnld: https://download.swift.org/swift-[5.6]-release/[amazonlinux2][-aarch64]/swift-[5.6]-RELEASE/swift-[5.6]-RELEASE-[amazonlinux2][-aarch64].tar.gz[.sig]
