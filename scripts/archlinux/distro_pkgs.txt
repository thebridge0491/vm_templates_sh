# archlinux/distro_pkgs.txt
# to use variables, source this file:
# source distro_pkgs.txt ; $pkgmgr_install $pkgs_cmdln_tools 2> /tmp/pkgsInstall_stderr.txt | tee /tmp/pkgsInstall_stdout.txt

pkgmgr_fetch='pacman --noconfirm --needed -Sw'
pkgmgr_install='pacman --noconfirm --needed -S'
pkgmgr_search='pacman -Ss'
pkgmgr_update='pacman --noconfirm -Syy'

pkg_repos_sources() {
	sep='#--------------------#'
	argX='grep -ve '^#' -ve '^\s*$' /etc/pacman.conf'
	
	#printf "${sep}\n$argX\n" | cat - $argX
	printf "${sep}\n$argX\n" ; $argX
}

pkgs_installed() {
	METHOD=${1:-explicit}
	
	sleep 3 ; pacman --noconfirm -Syy
	
	#echo '### for pkg message: see /var/log/pacman.log ###'
	if [ "leaf" = "$METHOD" ] ; then
		pkg_nms=$(pacman -Qqt) ;
		(for pkg_nm in $pkg_nms ; do
			pkg_grp=$(pacman -Qi $pkg_nm | grep -e Groups | tr -s ' ' '\t' | cut -f 3 ) ;
			pkg_repo=$(pacman -Si $pkg_nm | grep -e Repository | tr -s ' ' '\t' | cut -f 3 ) ;
			echo "($pkg_repo) $pkg_grp/$pkg_nm" ;
		done) | sort | column ;
	else
		# -Qqe for explicitly installed; -Qqd for dependencies
		pkg_nms=$(pacman -Qqe) ;
		(for pkg_nm in $pkg_nms ; do
			pkg_grp=$(pacman -Qi $pkg_nm | grep -e Groups | tr -s ' ' '\t' | cut -f 3 ) ;
			pkg_repo=$(pacman -Si $pkg_nm | grep -e Repository | tr -s ' ' '\t' | cut -f 3 ) ;
			echo "($pkg_repo) $pkg_grp/$pkg_nm" ;
		done) | sort | column ;
	fi
}

pkgs_cmdln_extras="linux-headers calcurse task msmtp-mta isync mutt abook transmission-cli rtorrent irssi finch rclone cmus"

pkgs_filesys_utils="dosfstools gptfdisk parted fsarchiver exfat-utils"

pkgs_cmdln_tools="base-devel sudo ntp python bash nfs-utils mc rlwrap nano nftables clamav curl wget aria2 gnu-netcat rsync bzip2 zip unzip p7zip gnupg openssh pass keychain openssl gnutls w3m cyrus-sasl cups-pdf nss-mdns qpdf sqlite git mercurial tcpdump nmap screen tmux"


pkgs_displaysvr_xorg="xorg xf86-video-vesa xf86-video-intel xf86-input-libinput xf86-input-evdev xterm xdg-utils xdg-user-dirs python2-xdg ttf-dejavu xscreensaver"

pkgs_deskenv_lxde="$pkgs_displaysvr_xorg lightdm-gtk-greeter obconf menumaker gvfs lxde conky"

pkgs_deskenv_lxqt="$pkgs_displaysvr_xorg breeze-icons sddm obconf-qt menumaker gvfs lxqt conky"


# possibly extra Qt:Gtk deskenv apps
# ----------------------------------------
# (disk utils) partitionmanager:gparted
# (ifc connect) cmst:wicd bluez-qt:blueman
# (editors, office apps) :geany libreoffice :gnucash
# (file share) transmission-qt:transmission-gtk luckybackup:grsync
# (archivers) ark:xarchiver
# (clipboard tool) qlipper:parcellite
# (crypt utils) keepassxc:keepass2 qtpass: kwalletmanager:seahorse
# (browser) :chromium falkon:firefox-esr
# (email) :thunderbird
# (print utils) skanlite:simple-scan qpdfview:epdfview
# (db utils) sqlitebrowser:
# (IM-IRC) quassel:hexchat :pidgin
# (vcs gui) qgit:gitg tortoisehg:
# (traffic util) nmapsi4:zenmap wireshark
# (media plyr) clementine:gmusicbrowser smplayer:totem
# (audio tool) pavucontrol-qt:pavucontrol k3b:brasero
# (image tool) lximage-qt:gpicview :gimp
# (webcam tool) kamoso:guvcview
# (PIM tools) :gsimplecal :orage
# (ebook utils) calibre: okular:fbreader


# addons browser: User Agent Switcher, AdBlock, Firebug, Https Everywhere,
#  uBlock, NoScript

# addons thunderbird: EnigMail, gContactSync, Lightning, Provider f/Ggl Cal,
#  TorBirdy


pkgs_lang_py2="python2-pip pychecker"

pkgs_lang_py3="python-pip"

pkgs_lang_py="${pkgs_lang_py2} ${pkgs_lang_py3}"

lang_c_gui="" # "gtk3 gtk2 qt5 qt4"
lang_c_crypto="" # "libgcrypt gpgme openssl gnutls mbedtls"
lang_c_db="" # "sqlite libdbi-drivers sqlite-jdbc"
pkgs_lang_c="cmake automake scons premake4 ninja gdb pkg-config splint cppcheck clang llvm check cunit bcunit gcc-fortran lldb ruby-rake swig json-glib ${lang_c_gui} ${lang_c_crypto} ${lang_c_db}"
# dnld & compile: log4c
# ddd valgrind doxygen

pkgs_lang_java="jdk7-openjdk jdk8-openjdk junit gradle apache-ant maven groovy"
default_java_home="/usr/lib/jvm/default"
default_java_version="1.7"


pkgs_lang_scm="gauche"

pkgs_lang_hs="ghc stack"

pkgs_lang_scala="jdk7-openjdk jdk8-openjdk junit gradle apache-ant maven scala"

pkgs_lang_ml="ocaml opam camlp4 ocamlbuild ocaml-findlib"

pkgs_lang_lisp="sbcl"


pkgs_lang_go="go gpm"

pkgs_lang_cs="mono dotnet-sdk"

pkgs_lang_clj="clojure leiningen"

pkgs_lang_fs="fsharp"

pkgs_lang_rs="rust"

pkgs_lang_rb="ruby jruby"
